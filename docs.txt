Main address for requests: http://kupriunin.ru

*************************************************************************

GET kupriunin.ru/users
HEADERS: { "Auth-Token": $Auth-Token }

Must return a JSON object: 
{
    "success": boolean,
    "statusCode": number,
    "statusMessage": string,
    "users": [
        {
            "firstName": string,
            "lastName": string,
            "birthdate": string,
            "id"?: string,
            "profilePicUrl"?: string,
            "bio"?: string
        }, 
        { same as above }
    ]
}

*************************************************************************

POST kupriunin.ru/users
HEADERS: { "Content-Type": "application/json;charset=utf-8" }
BODY: { firstName: string, lastName: string, birthdate: string, login: string, password: string }

Must return a JSON object: 

{
    "success": boolean,
    "statusCode": number,
    "statusMessage": string,
    "newUser": User   [as an object in $users],
    "error"?: string | Error[]   // Error = {"status": string, "statusCode": number},
    "users": [
        {
            "firstName": string,
            "lastName": string,
            "birthdate": string,
            "id"?: string,
            "profilePicUrl"?: string,
            "bio"?: string,
        }, 
        { same as above }
    ]
}

*************************************************************************

PUT kupriunin.ru/users?:id
QUERY: id (id === User.id)
HEADERS: { "Content-Type": "application/json;charset=utf-8", "Auth-Token": $Auth-Token }
BODY: { firstName: string, lastName: string, birthdate: string } (minimal object components)

Must return a JSON object: 
{
    "success": boolean,
    "statusCode": number,
    "statusMessage": string,
    "updatedUser": User    [as an object in $users],
    "error"?: string | Error[]   // Error = {"status": string, "statusCode": number},
    "users": [
        {
            "firstName": string,
            "lastName": string,
            "birthdate": string,
            "id"?: string,
            "profilePicUrl"?: string,
            "bio"?: string,
        }, 
        { same as above }
    ]
}

*************************************************************************

DELETE kupriunin.ru/users?:id 
QUERY: id  (id === User.id)
HEADERS: { "Content-Type": "application/json;charset=utf-8", "Auth-Token": $Auth-Token }

Must return a JSON object: 
{
    "success": boolean,
    "statusCode": number,
    "statusMessage": string,
    "deletedUser": User    [as an object in $users],
    "error"?: string | Error[]   // Error = {"status": string, "statusCode": number}
    "users": [
        {
            "firstName": string,
            "lastName": string,
            "birthdate": string,
            "id"?: string,
            "profilePicUrl"?: string,
            "bio"?: string,
        }, 
        { same as above }
    ]
}

*************************************************************************

POST kupriunin.ru/upload?:id
QUERY: id (id === User.id)
HEADERS: { "Auth-Token": $Auth-Token }
BODY: FormData 

const formdata = new FormData();
formdata.append("avatar", fileInput.files[0], "kupriunin.jpg");

const requestOptions = {
  method: 'POST',
  body: formdata,
  redirect: 'follow',
  'Auth-Token': $Auth-Token
};

fetch("kupriunin.ru/upload?id=123456", requestOptions)
  .then(response => response.text())
  .then(result => console.log(result))
  .catch(error => console.log('error', error));

Must return a JSON object: 
{
    "success": boolean,
    "statusCode": number,
    "statusMessage": string,
    "updatedUser": User    [as an object in $users],
    "error"?: string | Error[]   // Error = {"status": string, "statusCode": number},
    "users": [
        {
            "firstName": string,
            "lastName": string,
            "birthdate": string,
            "id"?: string,
            "profilePicUrl": string,
            "bio"?: string,
        }, 
        { same as above }
    ]
}
